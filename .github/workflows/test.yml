name: Download test

on:
  workflow_dispatch:
    inputs:
      deploy:
        description: type "deploy" to update Appetize (without it retrieves the version)
        required: false
      appetizeQueue:
        description: Appetize queue to upgrade (main/future/all)
        default: main
        required: true
      sdkPlatform:
        description: Platform to update (android/ios/all)
        default: all
        required: true
      sdkVersion:
        description: SDK version to use for Expo Go (e.g. 42.0.0)
        required: true

jobs:
  test:
    if: contains('all android', github.event.inputs.sdkPlatform)
    runs-on: ubuntu-latest
    steps:
      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Resolve Android client
        id: client
        run: |
          curl --silent -o versions.json https://exp.host/--/api/v2/versions

          VERSION=${{ github.event.inputs.sdkVersion }}
          CLIENT_URL=$(cat versions.json | jq .sdkVersions[\"$VERSION\"].androidClientUrl)
          CLIENT_VERSION=$(cat versions.json | jq .sdkVersions[\"$VERSION\"].androidClientVersion)
          
          if [ "${CLIENT_URL}" == "null" ]; then echo "No client url for SDK '$VERSION'"; exit 1; fi
          if [ "${CLIENT_VERSION}" == "null" ]; then echo "No client version for SDK '$VERSION'"; exit 1; fi

          echo "Resolved client $CLIENT_VERSION from SDK $VERSION"
          echo "::set-output name=url::$CLIENT_URL"
          echo "::set-output name=version::$CLIENT_VERSION"
      
      - name: Download Android client
        run: curl -o android.apk ${{ steps.client.outputs.url }}

      - name: Upload to Appetize
        run: curl --http1.1 https://$APPETIZE_TOKEN@api.appetize.io/v1/apps/$APPETIZE_APP -F "file=@android.apk" -F "platform=android"
        env:
          APPETIZE_TOKEN: ${{ secrets.APPETIZE_TOKEN }}
          APPETIZE_APP: ${{ secrets.APPETIZE_APP_CUSTOM }}

